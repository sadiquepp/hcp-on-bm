#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   https://www.haproxy.org/download/1.8/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend main
    bind *:5000
    acl url_static       path_beg       -i /static /images /javascript /stylesheets
    acl url_static       path_end       -i .jpg .gif .png .css .js

    use_backend static          if url_static
    default_backend             app

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
backend static
    balance     roundrobin
    server      static 127.0.0.1:4331 check

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend app
    balance     roundrobin
    server  app1 127.0.0.1:5001 check
    server  app2 127.0.0.1:5002 check
    server  app3 127.0.0.1:5003 check
    server  app4 127.0.0.1:5004 check

#------------------- HUB API ---------------------------------------#
frontend hub_api
    bind  192.168.122.{{ip_list.hublb}}:6443
    use_backend hub_api_backend
    mode tcp 

backend hub_api_backend
    balance roundrobin
    mode tcp 
    server bootstrap 192.168.122.{{ip_list.bootstrap}}:6443 check 
    server master1 192.168.122.{{ip_list.master1}}:6443 check 
    server master2 192.168.122.{{ip_list.master2}}:6443 check
    server master3 192.168.122.{{ip_list.master3}}:6443 check
##------------------- HUB API - INT  ---------------------------------------#
frontend hub_api_int
    bind  192.168.122.{{ip_list.hublb}}:22623
    use_backend hub_api_int_backend
    mode tcp 

backend hub_api_int_backend
    balance roundrobin
    mode tcp 
    server bootstrap 192.168.122.{{ip_list.bootstrap}}:22623 check 
    server master1 192.168.122.{{ip_list.master1}}:22623 check 
    server master2 192.168.122.{{ip_list.master2}}:22623 check 
    server master3 192.168.122.{{ip_list.master3}}:22623 check 
   
#------------------- HUB APPS  ---------------------------------------#
frontend hub_apps
    bind  192.168.122.{{ip_list.hublb}}:80
    use_backend hub_apps_backend
    mode tcp 

backend hub_apps_backend
    balance roundrobin
    mode tcp 
    server master1 192.168.122.{{ip_list.worker1}}:80 check 
    server master2 192.168.122.{{ip_list.worker2}}:80 check
    server master3 192.168.122.{{ip_list.worker3}}:80 check 

#------------------- HUB APPS - HTTPS  -------------------------------#
frontend hub_apps_https
    bind  192.168.122.{{ip_list.hublb}}:443
    use_backend hub_apps_https_backend
    mode tcp 

backend hub_apps_https_backend
    balance roundrobin
    mode tcp 
    server master1 192.168.122.{{ip_list.worker1}}:443 check 
    server master2 192.168.122.{{ip_list.worker2}}:443 check 
    server master3 192.168.122.{{ip_list.worker3}}:443 check 
 
  
#------------------- HCP-Cluster1 APPS -------------------------------------#
frontend hcp_cluster1_apps
    bind  192.168.122.{{ip_list.c1lb}}:80
    use_backend hcp_cluster1_apps_backend
    mode tcp 

backend hcp_cluster1_apps_backend
    mode tcp 
    balance roundrobin
    server worker1 192.168.122.{{ip_list.c1worker1}}:80 check
    server worker2 192.168.122.{{ip_list.c1worker2}}:80 check 
    server worker3 192.168.122.{{ip_list.c1worker3}}:80 check 

#------------------- HCP-Cluster1 APPS - HTTPS  ----------------------------#
frontend hcp_cluster1_apps_https
    bind  192.168.122.{{ip_list.c1lb}}:443
    use_backend hcp_cluster1_apps_https_backend
    mode tcp 

backend hcp_cluster1_apps_https_backend
    balance roundrobin
    mode tcp 
    server worker1 192.168.122.{{ip_list.c1worker1}}:443 check
    server worker2 192.168.122.{{ip_list.c1worker2}}:443 check 
    server worker3 192.168.122.{{ip_list.c1worker3}}:443 check 
#
#------------------- HCP-Cluster2 APPS -------------------------------------#
frontend hcp_cluster2_apps
    bind  192.168.122.{{ip_list.c2lb}}:80
    use_backend hcp_cluster2_apps_backend
    mode tcp 

backend hcp_cluster2_apps_backend
    mode tcp 
    balance roundrobin
    server worker1 192.168.122.{{ip_list.c2worker1}}:80 check
    server worker2 192.168.122.{{ip_list.c2worker2}}:80 check 
    server worker3 192.168.122.{{ip_list.c2worker3}}:80 check 

#------------------- HCP-Cluster1 APPS - HTTPS  ----------------------------#
frontend hcp_cluster2_apps_https
    bind  192.168.122.{{ip_list.c2lb}}:443
    use_backend hcp_cluster2_apps_https_backend
    mode tcp 

backend hcp_cluster2_apps_https_backend
    balance roundrobin
    mode tcp 
    server worker1 192.168.122.{{ip_list.c2worker1}}:443 check
    server worker2 192.168.122.{{ip_list.c2worker2}}:443 check 
    server worker3 192.168.122.{{ip_list.c2worker3}}:443 check 
